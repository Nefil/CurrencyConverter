# CurrencyConverter

## Project Description

CurrencyConverter is a desktop WPF application written in C#. It allows you to fetch the latest currency exchange rates from an external API and convert values between selected currencies. Additionally, rates are saved in a local SQLite database. The project uses technologies such as LINQ, HTTPClient, WPF, JSON parsing and Entity Framework Core for database operations.

## Features

- Fetching currency exchange rates from API ([openexchangerates.org](https://openexchangerates.org/))
- Converting amounts between selected currencies
- Simple WPF graphical user interface
- Error handling and input validation
- JSON data parsing
- Currency rate data model
- Saving rates to local SQLite database
- Automatic updates of rates on startup

## Technologies

- C# (.NET)
- WPF
- HTTPClient
- Newtonsoft.Json
- LINQ (for data collection handling)
- Entity Framework Core (SQLite)

## Installation and Running

1. Clone the repository:
   ```
   git clone https://github.com/Nefil/CurrencyConverter.git
   ```
2. Open the project in Visual Studio.
3. Obtain an API key from openexchangerates.org and enter it in the code.
4. Build the project and run the application.

## Usage Example

Select currencies, enter an amount, click “Convert” – the application will fetch the latest rates from the internet, save them in the database and perform the conversion.

## Potential Project Extensions

- Adding unit tests

## Author

Daniel Segeth

## License

Project licensed under MIT.
